fpath=(/usr/local/share/zsh-completions $fpath)

source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'
source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'

eval "$(thefuck --alias)"

alias zshconfig="${EDITOR} ~/.zshrc"
alias ohmyzsh="${EDITOR} ~/.oh-my-zsh"
alias envconfig="${EDITOR} ~/.env"
alias vg="vagrant"
alias tailf="tail -f"
alias ll="ls -laFG" # Showing all files (with indicators) and colouring them in list
alias pip-up="pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U"
alias pip3-up="pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U"
alias activate="source env/bin/activate"
alias brew-up="brew update && brew upgrade && brew cu --all && brew cleanup && brew cask cleanup"
alias kamera="sudo killall AppleCameraAssistant; sudo killall VDCAssistant"
alias gpaat="git remote | xargs -L1 git push --all && git remote | xargs -L1 git push --tags"
alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
alias chrome-canary="/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary"
alias chromium="/Applications/Chromium.app/Contents/MacOS/Chromium"
alias dc-up="docker-compose up"
alias dc-stop="docker-compose stop"
alias p="python"
alias p3="python3"

function dc-ssh()
{
  command='/bin/bash'

  [[ "X${2}" != 'X' ]] && command=${2}

  docker-compose exec ${1} ${command}
}

function skype()
{
  number=2

  [[ "X${1}" != 'X' ]] && number=${1}

  open -na /Applications/Skype.app --args -DataPath /Users/$(whoami)/Library/Application\ Support/Skype${number}
}

function php-extension()
{
  php_version=$(php -r 'echo preg_replace("/(\d\.\d)\..+/", "$1", phpversion());')
  from="zend_extension"
  to=";zend_extension"
  ext="/usr/local/etc/php/${php_version}/conf.d/ext-${1}.ini"

  if [[ "${2}" == 'enable' ]]; then
        sed -i.bak s/${to}/${from}/g ${ext}
  else
        sed -i.bak s/${from}/${to}/g ${ext}
  fi

  php -v
}

function my-ip()
{
    ip=$(ipconfig getifaddr en0)

    [[ ${ip} == '' ]] && ip=$(ipconfig getifaddr en1)

    [[ ${1} != true ]] && echo ${ip}

    export DOCKER_MY_IP=${ip}
}

my-ip true
